/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.example.patrick.wazemap;

public class SmoothsortPriorityQueue {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SmoothsortPriorityQueue(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SmoothsortPriorityQueue obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SmoothSortWrapJNI.delete_SmoothsortPriorityQueue(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SmoothsortPriorityQueue(NodeVec nodes) {
    this(SmoothSortWrapJNI.new_SmoothsortPriorityQueue(NodeVec.getCPtr(nodes), nodes), true);
  }

  public void sort() {
    SmoothSortWrapJNI.SmoothsortPriorityQueue_sort(swigCPtr, this);
  }

  public int getQueueSize() {
    return SmoothSortWrapJNI.SmoothsortPriorityQueue_getQueueSize(swigCPtr, this);
  }

  public Node dequeue() {
    long cPtr = SmoothSortWrapJNI.SmoothsortPriorityQueue_dequeue(swigCPtr, this);
    return (cPtr == 0) ? null : new Node(cPtr, false);
  }

}
