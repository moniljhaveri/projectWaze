/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.maps.android.utils.demo;

public class K_Paths {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected K_Paths(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(K_Paths obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NodeWrapJNI.delete_K_Paths(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public K_Paths() {
    this(NodeWrapJNI.new_K_Paths__SWIG_0(), true);
  }

  public K_Paths(long n) {
    this(NodeWrapJNI.new_K_Paths__SWIG_1(n), true);
  }

  public long size() {
    return NodeWrapJNI.K_Paths_size(swigCPtr, this);
  }

  public long capacity() {
    return NodeWrapJNI.K_Paths_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    NodeWrapJNI.K_Paths_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return NodeWrapJNI.K_Paths_isEmpty(swigCPtr, this);
  }

  public void clear() {
    NodeWrapJNI.K_Paths_clear(swigCPtr, this);
  }

  public void add(PathVec x) {
    NodeWrapJNI.K_Paths_add(swigCPtr, this, PathVec.getCPtr(x), x);
  }

  public PathVec get(int i) {
    long cPtr = NodeWrapJNI.K_Paths_get(swigCPtr, this, i);
    return (cPtr == 0) ? null : new PathVec(cPtr, false);
  }

  public void set(int i, PathVec val) {
    NodeWrapJNI.K_Paths_set(swigCPtr, this, i, PathVec.getCPtr(val), val);
  }

}
